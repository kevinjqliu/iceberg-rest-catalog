services:
  iceberg_rest:
    image: iceberg-rest-postgres
    build:
      context: ../../
      dockerfile: Dockerfile
      target: prod
      args:
        - BASE_IMAGE=python:3.11-slim
        - EXTRAS=postgres
    container_name: iceberg-rest
    environment:
      - CATALOG_URI=postgresql://pguser:password@postgres:5432/iceberg_db
      - CATALOG_WAREHOUSE=s3://warehouse/rest
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8000:8000

  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=iceberg_db
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse/rest;
      /usr/bin/mc mb minio/warehouse/rest;
      /usr/bin/mc policy set public minio/warehouse/rest;
      tail -f /dev/null
      "

volumes:
  postgres_data:
